{"dependencies":[{"name":"C:\\Users\\Daniel\\Desktop\\Package managers\\Yarn\\package.json","includedInParent":true,"mtime":1522265205876},{"name":"C:\\Users\\Daniel\\Desktop\\Package managers\\Yarn\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1474859306000},{"name":"./_baseToNumber","loc":{"line":1,"column":27}},{"name":"./_baseToString","loc":{"line":2,"column":27}}],"generated":{"js":"var baseToNumber = require('./_baseToNumber'),\n    baseToString = require('./_baseToString');\n\n/**\n * Creates a function that performs a mathematical operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @param {number} [defaultValue] The value used for `undefined` arguments.\n * @returns {Function} Returns the new mathematical operation function.\n */\nfunction createMathOperation(operator, defaultValue) {\n  return function(value, other) {\n    var result;\n    if (value === undefined && other === undefined) {\n      return defaultValue;\n    }\n    if (value !== undefined) {\n      result = value;\n    }\n    if (other !== undefined) {\n      if (result === undefined) {\n        return other;\n      }\n      if (typeof value == 'string' || typeof other == 'string') {\n        value = baseToString(value);\n        other = baseToString(other);\n      } else {\n        value = baseToNumber(value);\n        other = baseToNumber(other);\n      }\n      result = operator(value, other);\n    }\n    return result;\n  };\n}\n\nmodule.exports = createMathOperation;\n","map":{"mappings":[{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\lodash\\_createMathOperation.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"node_modules\\lodash\\_createMathOperation.js":"var baseToNumber = require('./_baseToNumber'),\n    baseToString = require('./_baseToString');\n\n/**\n * Creates a function that performs a mathematical operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @param {number} [defaultValue] The value used for `undefined` arguments.\n * @returns {Function} Returns the new mathematical operation function.\n */\nfunction createMathOperation(operator, defaultValue) {\n  return function(value, other) {\n    var result;\n    if (value === undefined && other === undefined) {\n      return defaultValue;\n    }\n    if (value !== undefined) {\n      result = value;\n    }\n    if (other !== undefined) {\n      if (result === undefined) {\n        return other;\n      }\n      if (typeof value == 'string' || typeof other == 'string') {\n        value = baseToString(value);\n        other = baseToString(other);\n      } else {\n        value = baseToNumber(value);\n        other = baseToNumber(other);\n      }\n      result = operator(value, other);\n    }\n    return result;\n  };\n}\n\nmodule.exports = createMathOperation;\n"},"lineCount":39}},"hash":"6acbe10692d26c8cebaf0f86c11ee51d","cacheData":{"env":{}}}
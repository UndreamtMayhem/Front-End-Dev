{"dependencies":[{"name":"C:\\Users\\Daniel\\Desktop\\Package managers\\Yarn\\package.json","includedInParent":true,"mtime":1522265205876},{"name":"C:\\Users\\Daniel\\Desktop\\Package managers\\Yarn\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1474859306000},{"name":"./isSymbol","loc":{"line":1,"column":23}}],"generated":{"js":"var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.toNumber` which doesn't ensure correct\n * conversions of binary, hexadecimal, or octal string values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n */\nfunction baseToNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  return +value;\n}\n\nmodule.exports = baseToNumber;\n","map":{"mappings":[{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\lodash\\_baseToNumber.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"node_modules\\lodash\\_baseToNumber.js":"var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.toNumber` which doesn't ensure correct\n * conversions of binary, hexadecimal, or octal string values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n */\nfunction baseToNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  return +value;\n}\n\nmodule.exports = baseToNumber;\n"},"lineCount":25}},"hash":"6fa88548c31941be902df847cdd9a6a0","cacheData":{"env":{}}}